name: Test OpenMM Runner
on:
  workflow_dispatch:


jobs:
  start-aws-runner:
    runs-on: ubuntu-latest
    outputs:
      mapping: ${{ steps.aws-start.outputs.mapping }}
    steps:
      - name: Create cloud runner
        id: aws-start
        uses: omsf-eco-infra/gha-runner@v0.1.0
        with:
          provider: "aws"
          action: "start"
          aws_image_id: ami-08f2838a07f464634
          aws_instance_type: g4dn-xlarge
          aws_region_name: us-east-1
          aws_home_dir: /home/ubuntu
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  openmm-test:
    runs-on: self-hosted
    steps:
      - uses: mamba-org/setup-micromamba@main
        with:
          environment-file: environment.yml
          condarc: |
            channels:
              - conda-forge
              - defaults
          environment-name: openmm
          channels: conda-forge,defaults
      - name: Test for GPU
        id: gpu_test
        run: python -m openmm.testInstallation
  stop-aws-runner:
    runs-on: ubuntu-latest
    needs:
      - start-aws-runner
      - openmm-test
    if: ${{ always() }}
    steps:
      - name: Stop instances
        uses: omsf-eco-infra/gha-runner@v0.1.0
        with:
          provider: "aws"
          action: "stop"
          instance_mapping: ${{ needs.start-aws-runner.outputs.mapping }}
          aws_region_name: us-east-1
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}




